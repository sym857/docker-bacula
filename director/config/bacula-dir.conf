#
# Default Bacula Director Configuration file
#
#  The only thing that MUST be changed is to add one or more
#   file or directory names in the Include directive of the
#   FileSet resource.
#
#  For Bacula release 5.0.0 (26 January 2010) -- redhat 
#
#  You might also want to change the default email address
#   from root to your address.  See the "mail" and "operator"
#   directives in the Messages resource.
#

Director {                            # define myself
  Name = bacula-dir
  DIRport = 9101                # where we listen for UA connections
  QueryFile = "/usr/libexec/bacula/query.sql"
  WorkingDirectory = "/var/spool/bacula"
  PidDirectory = "/var/run"
  Maximum Concurrent Jobs = 1
  Password = "AtkinsonSteve"         # Console password
  Messages = Daemon
}

JobDefs {
  Name = "DefaultJob"
  Type = Backup
  Level = Incremental
  Client = backupserver
  FileSet = "Linux"
  Schedule = "WeeklyCycle"
  Storage = File
  Messages = Standard
  Pool = Full-Pool
  Full Backup Pool = Full-Pool
  Differential Backup Pool = Diff-Pool
  Incremental Backup Pool = Inc-Pool
  Priority = 10
  Write Bootstrap = "/var/spool/bacula/%c.bsr"
}

#
# Define the main nightly save backup job
#   By default, this job will back up to disk in /tmp
Job {
  Name = BackupMythfeLivingRoom
  JobDefs = DefaultJob
  Client = mythfeliving
  Run Before Job = "/root/wake-server.sh WAKE mythfeliving.satkinson.co.uk"
  Run After Job = "/root/wake-server.sh SLEEP mythfeliving.satkinson.co.uk"
}

Job {
  Name = BackupMythfeBed1
  JobDefs = DefaultJob
  Client = mythfebed1
  Run Before Job = "/root/wake-server.sh WAKE mythfebed1.satkinson.co.uk"
  Run After Job = "/root/wake-server.sh SLEEP mythfebed1.satkinson.co.uk"
}

Job {
  Name = "BackupMediaServer"
  JobDefs = "DefaultJob"
  client = mediaserver
}

Job {
  Name = "BackupMyself"
  JobDefs = "DefaultJob"
}


# Backup the catalog database (after the nightly save)
Job {
  Name = "BackupCatalog"
  JobDefs = "DefaultJob"
  Level = Full
  FileSet="Catalog"
  Schedule = "WeeklyCycleAfterBackup"
  # This creates an ASCII copy of the catalog
  # Arguments to make_catalog_backup.pl are:
  #  make_catalog_backup.pl <catalog-name>
  RunBeforeJob = "/usr/libexec/bacula/make_catalog_backup.pl MyCatalog"
  # This deletes the copy of the catalog
  RunAfterJob  = "/usr/libexec/bacula/delete_catalog_backup"
  Write Bootstrap = "/var/spool/bacula/%n.bsr"
  Priority = 11                   # run after main backup
}

#
# Standard Restore template, to be changed by Console program
#  Only one such job is needed for all Jobs/Clients/Storage ...
#
Job {
  Name = "RestoreFiles"
  Type = Restore
  Client=backupserver                 
  FileSet="LinuxFull"                  
  Storage = File                      
  Pool = Full-Pool
  Messages = Standard
  Where = /tmp/bacula-restores
}


# List of files to be backed up
FileSet {
  Name = "LinuxFull"
  Include {
    Options {
      signature = MD5
      compression=GZIP9
    }
    File = /
  }
  Exclude {
    File = /var/lib/bacula
    File = /nonexistant/path/to/file/archive/dir
    File = /proc
    File = /tmp
    File = /.journal
    File = /.fsck
    File = /NAS2
  }
}

# List of files to be backed up
FileSet {
  Name = "NAS"
  Include {
    Options {
      signature = MD5
      compression=GZIP9
    }
    File = /NAS2
  }
  Exclude {
    File = /.journal
    File = /.fsck
  }
}

# List of files to be backed up
FileSet {
  Name = "Linux"
  Include {
    Options {
      signature = MD5
      compression=GZIP9
    }
    File = /etc
    File = /home
    File = /root
    File = /var
    File = /storage
    File = /opt
  }
  Exclude {
    File = /var/lib/bacula
    File = /var/cache
    File = /var/caches
    File = /var/log
    File = /var/tmp
    File = /var/lock
    File = /proc
    File = /tmp
    File = /.journal
    File = /.fsck
    File = /NAS2
  }
}

# This is the backup of the catalog
FileSet {
  Name = "Catalog"
  Include {
    Options {
      signature = MD5
    }
    File = "/var/spool/bacula/bacula.sql"
  }
}




#
# When to do the backups, full backup on first sunday of the month,
#  differential (i.e. incremental since full) every other sunday,
#  and incremental backups other days

Schedule {
  Name = "WeeklyCycle"
  Run = Full  1st sun at 11:05
  Run = Differential  2nd-5th sun at 11:05
  Run = Incremental  mon-sat at 11:05
}

# This schedule does the catalog. It starts after the WeeklyCycle
Schedule {
  Name = "WeeklyCycleAfterBackup"
  Run = Full sun-sat at 11:10
}

# Client (File Services) to backup
Client {
  Name = mythfeliving
  Address = mythfeliving.satkinson.co.uk 
  FDPort = 9102
  Catalog = MyCatalog
  Password = "AtkinsonSteve"         # password for FileDaemon
  File Retention = 32 days            # 30 days
  Job Retention = 6 months            # six months
  AutoPrune = yes                     # Prune expired Jobs/Files
}

# Client (File Services) to backup
Client {
  Name = mythfebed1
  Address = mythfebed1.satkinson.co.uk
  FDPort = 9102
  Catalog = MyCatalog
  Password = "AtkinsonSteve"         # password for FileDaemon
  File Retention = 32 days            # 30 days
  Job Retention = 6 months            # six months
  AutoPrune = yes                     # Prune expired Jobs/Files
}

Client {
  Name = mediaserver
  Address = mediaserver.satkinson.co.uk
  FDPort = 9102
  Catalog = MyCatalog
  Password = "AtkinsonSteve"         # password for FileDaemon
  File Retention = 32 days            # 30 days
  Job Retention = 6 months            # six months
  AutoPrune = yes                     # Prune expired Jobs/Files
}

Client {
  Name = backupserver
  Address = backup.satkinson.co.uk
  FDPort = 9102
  Catalog = MyCatalog
  Password = "AtkinsonSteve"         # password for FileDaemon
  File Retention = 32 days            # 30 days
  Job Retention = 6 months            # six months
  AutoPrune = yes                     # Prune expired Jobs/Files
}



Pool {
  Name = Full-Pool
  Pool Type = Backup
  Recycle = yes
  AutoPrune = yes
  Volume Retention = 32 days
  Maximum Volume Jobs = 1
  Label Format = Full-
  Maximum Volume Bytes = 512G
}

Pool {
  Name = Inc-Pool
  Pool Type = Backup
  Recycle = yes
  AutoPrune = yes
  Volume Retention = 20 days
  Maximum Volume Jobs = 24              # 6 days * 4 servers for one weeks worth of backups
  Label Format = Inc-
  #Maximum Volumes = 7
  Maximum Volume Bytes = 512G
}

Pool {
  Name = Diff-Pool
  Pool Type = Backup
  Recycle = yes
  AutoPrune = yes
  Volume Retention = 20 days
  Maximum Volume Jobs = 1
  Label Format = Diff-
  #Maximum Volumes = 7
  Maximum Volume Bytes = 512G
}


# Definition of file storage device
Storage {
  Name = File
  Address = backup.satkinson.co.uk                # N.B. Use a fully qualified name here
  SDPort = 9103
  Password = "AtkinsonSteve"
  Device = FileStorage
  Media Type = File
}


# Generic catalog service
Catalog {
  Name = MyCatalog
  # Uncomment the following line if you want the dbi driver
  # dbdriver = "dbi:sqlite3"; dbaddress = 127.0.0.1; dbport =  
  dbname = "bacula"; dbuser = "bacula"; dbpassword = "S3cr3tSqu1rr3l"
}

# Reasonable message delivery -- send most everything to email address
#  and to the console
Messages {
  Name = Standard
#
# NOTE! If you send to two email or more email addresses, you will need
#  to replace the %r in the from field (-f part) with a single valid
#  email address in both the mailcommand and the operatorcommand.
#  What this does is, it sets the email address that emails would display
#  in the FROM field, which is by default the same email as they're being
#  sent to.  However, if you send email to more than one address, then
#  you'll have to set the FROM address manually, to a single address. 
#  for example, a 'no-reply@mydomain.com', is better since that tends to
#  tell (most) people that its coming from an automated source.

#
  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: %t %e of %c %l\" %r"
  operatorcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: Intervention needed for %j\" %r"
  mail = root@localhost = all, !skipped            
  operator = root@localhost = mount
  #console = all, !skipped, !saved
#
# WARNING! the following will create a file that you must cycle from
#          time to time as it will grow indefinitely. However, it will
#          also keep all your messages if they scroll off the console.
#
  append = "/var/spool/bacula/log" = all, !skipped
  catalog = all
}


#
# Message delivery for daemon messages (no job).
Messages {
  Name = Daemon
  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula daemon message\" %r"
  mail = root@localhost = all, !skipped            
  console = all, !skipped, !saved
  append = "/var/log/bacula.log" = all, !skipped
}


#
# Restricted console used by tray-monitor to get the status of the director
#
Console {
  Name = bacula-mon
  Password = "AtkinsonSteve"
  CommandACL = status, .status
}
